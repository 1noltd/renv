% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/install.R
\name{install}
\alias{install}
\title{Install Packages}
\usage{
install(packages, ..., library = NULL, rebuild = FALSE,
  project = NULL)
}
\arguments{
\item{packages}{A character vector of \R packages to install. Required
package dependencies (\code{Depends}, \code{Imports}, \code{LinkingTo}) will be installed
as required.}

\item{...}{Optional arguments; reserved for future expansion.}

\item{library}{The library from which packages should be installed. When
\code{NULL}, the active library (that is, the first entry reported in
\code{.libPaths()}) is used instead.}

\item{rebuild}{Force packages to be rebuilt, thereby bypassing any installed
versions of the package available in the cache? This can either be a
boolean (indicating that the requested package(s) should be rebuilt), or a
vector of package names indicating which packages should be rebuilt.}

\item{project}{The project directory. If \code{NULL}, then the active project will
be used. If no project is currently active, then the current working
directory is used instead.}
}
\description{
Install one or more \R packages from a variety of remote sources.
}
\details{
\code{install()} uses the same machinery as \code{\link[=restore]{restore()}} when installing packages.
In particular, this means that the local cache of package installations is
used when possible. This helps to avoid re-downloading packages that have
already been downloaded before, and re-compiling packages from source when
a binary copy of that package is already available.

Note that this interface is subject to change -- the goal is to hook into
separate package installation backends in the future.
}
\examples{
\dontrun{

# install the latest version of a package from CRAN
renv::install("digest")

# install an old version of package from CRAN (using archives)
renv::install("digest@0.6.18")

# install a package from GitHub (latest master)
renv::install("eddelbuettel/digest")

# install a package in a local directory
renv::install("~/path/to/package")

}
}
