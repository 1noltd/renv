% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.R
\name{init}
\alias{init}
\title{Initialize a Project-local Virtual Environment}
\usage{
init(project = NULL, ..., force = FALSE)
}
\arguments{
\item{project}{The project directory.}

\item{...}{Optional arguments passed to \code{\link[=create]{create()}}.}

\item{force}{Boolean; force initialization? By default, \code{renv} will refuse
to initialize the home directory, or parents of the home directory.}
}
\description{
Discover packages used within the current project, and then initialize a
project-local virtual environment with those packages. The
currently-installed versions of any packages in use (as detected within the
user library) are then added to the project manifest, effectively forking
the state of your user library into a private project library.
}
\details{
The primary steps taken when initializing a new virtual environment are:
\enumerate{
\item \R package dependencies are discovered within the \R files used within
the project;
\item Discovered packages are copied into the \code{renv} global package cache (so
these packages can be re-used across multiple projects as necessary),
\item Any missing \R package dependencies discovered are then installed into
a private project library,
\item The \code{\link[=activate]{activate()}} function is called to activate the newly-created
virtual environment.
}

This mimics the workflow provided by \code{packrat::init()}, but with more
reasonable default behaviors -- in particular, \code{renv} does not attempt
to download and store package sources, and \code{renv} will re-use packages
that have already been installed whenever possible.
}
